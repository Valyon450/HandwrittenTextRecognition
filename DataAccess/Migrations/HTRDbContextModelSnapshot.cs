// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(HTRDbContext))]
    partial class HTRDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccess.Entities.InFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ImportTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TuningId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("USRSId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TuningId");

                    b.HasIndex("USRSId");

                    b.ToTable("InFile", (string)null);
                });

            modelBuilder.Entity("DataAccess.Entities.RecognitionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ImportTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastTrainedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RecognitionModel", (string)null);
                });

            modelBuilder.Entity("DataAccess.Entities.RecognitionResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Accuracy")
                        .HasColumnType("real");

                    b.Property<float>("AverageConfidence")
                        .HasColumnType("real");

                    b.Property<float>("CharacterErrorRate")
                        .HasColumnType("real");

                    b.Property<float>("ProcessingTime")
                        .HasColumnType("real");

                    b.Property<DateTime>("RecognitionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecognizedText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("USRSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("WordErrorRate")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("USRSId")
                        .IsUnique()
                        .HasFilter("[USRSId] IS NOT NULL");

                    b.ToTable("RecognitionResult", (string)null);
                });

            modelBuilder.Entity("DataAccess.Entities.TextBlock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<Guid?>("InFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsBenchmark")
                        .HasColumnType("bit");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TextType")
                        .HasColumnType("int");

                    b.Property<Guid?>("TuningId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InFileId");

                    b.HasIndex("TuningId");

                    b.ToTable("TextBlock", (string)null);
                });

            modelBuilder.Entity("DataAccess.Entities.Tuning", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FinishTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RecognitionModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RecognitionModelId");

                    b.HasIndex("UserId");

                    b.ToTable("Tuning", (string)null);
                });

            modelBuilder.Entity("DataAccess.Entities.USRS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FinishTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RecognitionModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RecognitionResultId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RecognitionModelId");

                    b.HasIndex("UserId");

                    b.ToTable("USRS", (string)null);
                });

            modelBuilder.Entity("DataAccess.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("DataAccess.Entities.InFile", b =>
                {
                    b.HasOne("DataAccess.Entities.Tuning", "Tuning")
                        .WithMany("InFiles")
                        .HasForeignKey("TuningId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DataAccess.Entities.USRS", "USRS")
                        .WithMany("InFiles")
                        .HasForeignKey("USRSId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Tuning");

                    b.Navigation("USRS");
                });

            modelBuilder.Entity("DataAccess.Entities.RecognitionResult", b =>
                {
                    b.HasOne("DataAccess.Entities.USRS", "USRS")
                        .WithOne("RecognitionResult")
                        .HasForeignKey("DataAccess.Entities.RecognitionResult", "USRSId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("USRS");
                });

            modelBuilder.Entity("DataAccess.Entities.TextBlock", b =>
                {
                    b.HasOne("DataAccess.Entities.InFile", "InFile")
                        .WithMany("TextBlocks")
                        .HasForeignKey("InFileId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DataAccess.Entities.Tuning", "Tuning")
                        .WithMany("TextBlocks")
                        .HasForeignKey("TuningId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("InFile");

                    b.Navigation("Tuning");
                });

            modelBuilder.Entity("DataAccess.Entities.Tuning", b =>
                {
                    b.HasOne("DataAccess.Entities.RecognitionModel", "RecognitionModel")
                        .WithMany("Tunings")
                        .HasForeignKey("RecognitionModelId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DataAccess.Entities.User", "User")
                        .WithMany("Tunings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("RecognitionModel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccess.Entities.USRS", b =>
                {
                    b.HasOne("DataAccess.Entities.RecognitionModel", "RecognitionModel")
                        .WithMany("USRSs")
                        .HasForeignKey("RecognitionModelId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DataAccess.Entities.User", "User")
                        .WithMany("USRSs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("RecognitionModel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccess.Entities.InFile", b =>
                {
                    b.Navigation("TextBlocks");
                });

            modelBuilder.Entity("DataAccess.Entities.RecognitionModel", b =>
                {
                    b.Navigation("Tunings");

                    b.Navigation("USRSs");
                });

            modelBuilder.Entity("DataAccess.Entities.Tuning", b =>
                {
                    b.Navigation("InFiles");

                    b.Navigation("TextBlocks");
                });

            modelBuilder.Entity("DataAccess.Entities.USRS", b =>
                {
                    b.Navigation("InFiles");

                    b.Navigation("RecognitionResult");
                });

            modelBuilder.Entity("DataAccess.Entities.User", b =>
                {
                    b.Navigation("Tunings");

                    b.Navigation("USRSs");
                });
#pragma warning restore 612, 618
        }
    }
}
